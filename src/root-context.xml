<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-3.0.xsd
  http://www.springframework.org/schema/tx 
  http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
  http://www.springframework.org/schema/mvc 
  http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
  http://www.springframework.org/schema/aop 
  http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 配置DataSource数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/springmvc?characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="111111" />
		<property name="maxActive" value="5" />
		<property name="maxIdle" value="3" />
		<property name="maxWait" value="1000" />
		<property name="defaultAutoCommit" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
	</bean>
	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	   <property name="driverClass" value="com.mysql.jdbc.Driver" />
	   <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/springmvc?characterEncoding=utf-8" />
	   <property name="user" value="root" />
	   <property name="password" value="111111" />
	   <property name="minPoolSize" value="1" />
	   <property name="maxPoolSize" value="5"/>  
	   <property name="initialPoolSize" value="5"/>
	   <property name="maxIdleTime" value="3"/>
	   <property name="acquireIncrement" value="1"/>
	  
	   <property name="acquireRetryAttempts" value="30"/>
	   <property name="acquireRetryDelay" value="1000"/>
	   <property name="testConnectionOnCheckin" value="true"/>
	   <property name="automaticTestTable" value="c3p0TestTable"/>
	   <property name="idleConnectionTestPeriod" value="18000"/>
	   <property name="checkoutTimeout" value="3000"/>

	</bean>

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config1.xml"></property>
	</bean>
	<!-- 创建SqlSessionFactory，同时指定数据源1 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!-- 第一种加事务的方式：注解方式，需要在要添加事务的方法类上添加注解 @Transaction(value="txManager") -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource1"></property>
    </bean>
    
    <!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性    -->
	<tx:annotation-driven transaction-manager="txManager" />  
	<!-- 第一种方法结束 -->
	
	<!-- 第二种方法：用tx标签和aop切面编程 -->
	<!-- <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource1"></property>
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
    	<tx:attributes>
    		<tx:method name="*" propagation="REQUIRED"/>
    	</tx:attributes>
    </tx:advice>
    
    <aop:config>
    	<aop:pointcut  id="transactionalPointCut" expression="execution(* com.test.transactional.TestTransactionalServiceImpl.*(..))"/>
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionalPointCut"/>
    </aop:config> -->
    <!-- 第二种方法结束 -->
    
	
</beans>  